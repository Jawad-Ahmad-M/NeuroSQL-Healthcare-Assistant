import sys
from PyQt5.QtWidgets import QApplication, QMainWindow,QPushButton
from PyQt5.QtCore import pyqtSlot, QFile, QTextStream
import PyQt5.QtCore
from sidebar_ui import Ui_MainWindow

######  Importing my query executor function in my program #######
from database_commands.project_data_base import execute_query 

###### Importing my chat function in my program ######
from api_keys.openaikeys import chat,chat_ai

class MainWindow(QMainWindow):
    def __init__(self):
        super(MainWindow, self).__init__()
        
        self.ui = Ui_MainWindow()
        self.ui.setupUi(self)

        self.ui.icons_only_widget.hide()
        self.ui.stackedWidget.setCurrentIndex(0)
        self.ui.api_btn_1.setChecked(True)

        self.ui.select_ai_input.setPlaceholderText("Enter the statement whose SQL query you want here...")
        self.ui.select_ai_result.setPlaceholderText("Here will be the SQL query generated by the AI based on your input.")
        self.ui.select_manual_input.setPlaceholderText("Enter a valid DATA RETRIEVAL SQL statement to interact with the database.")
        self.ui.select_manual_result.setPlaceholderText("Here the results will be fetched from your local database based on the query.")
        
        self.ui.insert_ai_input.setPlaceholderText("Enter the statement whose SQL query you want here...")
        self.ui.insert_ai_result.setPlaceholderText("Here will be the SQL query generated by the AI based on your input.")
        self.ui.insert_manual_input.setPlaceholderText("Enter a valid DATA INSERTION SQL statement to interact with the database.")
        self.ui.insert_manual_result.setPlaceholderText("Here the results will be fetched from your local database based on the query.")
        
        self.ui.delete_ai_input.setPlaceholderText("Enter the statement whose SQL query you want here...")
        self.ui.delete_ai_result.setPlaceholderText("Here will be the SQL query generated by the AI based on your input.")
        self.ui.delete_manual_input.setPlaceholderText("Enter a valid DATA DELETION SQL statement to interact with the database.")
        self.ui.delete_manual_result.setPlaceholderText("Here the results will be fetched from your local database based on the query.")
        
        self.ui.update_ai_input.setPlaceholderText("Enter the statement whose SQL query you want here...")
        self.ui.update_ai_result.setPlaceholderText("Here will be the SQL query generated by the AI based on your input.")
        self.ui.update_manual_input.setPlaceholderText("Enter a valid DATA MODIFICATION SQL statement to interact with the database.")
        self.ui.update_manual_result.setPlaceholderText("Here the results will be fetched from your local database based on the query.")
        
        self.ui.schema_ai_input.setPlaceholderText("Enter the statement whose SQL query you want here...")
        self.ui.schema_ai_result.setPlaceholderText("Here will be the SQL query generated by the AI based on your input.")
        self.ui.schema_manual_input.setPlaceholderText("Enter a valid SCHEMA MODIFICATION SQL statement to interact with the database.")
        self.ui.schema_manual_result.setPlaceholderText("Here the results will be fetched from your local database based on the query.")

        


        def reset_inner_stacks():
            self.ui.stackedWidget_2.setCurrentIndex(0)
            self.ui.stackedWidget_3.setCurrentIndex(0)
            self.ui.stackedWidget_4.setCurrentIndex(0)
            self.ui.stackedWidget_5.setCurrentIndex(0)
            self.ui.stackedWidget_6.setCurrentIndex(0)

        # API Page
        self.ui.api_btn_1.clicked.connect(lambda: (self.ui.stackedWidget.setCurrentIndex(0), reset_inner_stacks()))
        self.ui.api_btn_2.clicked.connect(lambda: (self.ui.stackedWidget.setCurrentIndex(0), reset_inner_stacks()))
        # SELECT
        self.ui.select_query_btn_1.clicked.connect(lambda: (self.ui.stackedWidget.setCurrentIndex(1), reset_inner_stacks()))
        self.ui.select_query_btn_2.clicked.connect(lambda: (self.ui.stackedWidget.setCurrentIndex(1), reset_inner_stacks()))
        # INSERT
        self.ui.insert_query_btn_1.clicked.connect(lambda: (self.ui.stackedWidget.setCurrentIndex(2), reset_inner_stacks()))
        self.ui.insert_query_btn_2.clicked.connect(lambda: (self.ui.stackedWidget.setCurrentIndex(2), reset_inner_stacks()))
        # DELETE
        self.ui.delete_query_btn_1.clicked.connect(lambda: (self.ui.stackedWidget.setCurrentIndex(3), reset_inner_stacks()))
        self.ui.delete_query_btn_2.clicked.connect(lambda: (self.ui.stackedWidget.setCurrentIndex(3), reset_inner_stacks()))
        # UPDATE
        self.ui.update_query_btn_1.clicked.connect(lambda: (self.ui.stackedWidget.setCurrentIndex(4), reset_inner_stacks()))
        self.ui.update_query_btn_2.clicked.connect(lambda: (self.ui.stackedWidget.setCurrentIndex(4), reset_inner_stacks()))
        # SCHEMA
        self.ui.schema_query_btn_1.clicked.connect(lambda: (self.ui.stackedWidget.setCurrentIndex(5), reset_inner_stacks()))
        self.ui.schema_query_btn_2.clicked.connect(lambda: (self.ui.stackedWidget.setCurrentIndex(5), reset_inner_stacks()))




        # SELECT Query Page: Proceed -> show next page (index 1)
        self.ui.select_proceed_btn.clicked.connect(lambda: self.ui.stackedWidget_2.setCurrentIndex(1))
        # INSERT Query Page: Proceed -> show next page (index 1)
        self.ui.insert_proceed_btn.clicked.connect(lambda: self.ui.stackedWidget_3.setCurrentIndex(1))
        # DELETE Query Page: Proceed -> show next page (index 1)
        self.ui.delete_proceed_btn.clicked.connect(lambda: self.ui.stackedWidget_4.setCurrentIndex(1))
        # UPDATE Query Page: Proceed -> show next page (index 1)
        self.ui.update_proceed_btn.clicked.connect(lambda: self.ui.stackedWidget_5.setCurrentIndex(1))
        # Schema Manipulation Page: Proceed -> show next page(index 1)
        self.ui.schema_proceed_btn.clicked.connect(lambda: self.ui.stackedWidget_6.setCurrentIndex(1))
        
        ############     Lines for Pressing buttons to engage with the responses generated after executing queries ############
        self.ui.select_manual_btn.clicked.connect(self.select_query_executor)
        self.ui.insert_manual_btn.clicked.connect(self.insert_query_executor)
        self.ui.delete_manual_btn.clicked.connect(self.delete_query_executor)
        self.ui.update_manual_btn.clicked.connect(self.update_query_executor)
        self.ui.schema_manual_btn.clicked.connect(self.schema_query_executor)

        self.ui.select_ai_btn.clicked.connect(self.select_ai_query_executor)
        self.ui.insert_ai_btn.clicked.connect(self.insert_ai_query_executor)
        self.ui.delete_ai_btn.clicked.connect(self.delete_ai_query_executor)
        self.ui.update_ai_btn.clicked.connect(self.update_ai_query_executor)
        self.ui.main_ai_input_btn.clicked.connect(self.main_ai_query_executor)
        self.ui.schema_ai_btn.clicked.connect(self.schema_ai_query_executor)


    def select_query_executor(self):
        query = self.ui.select_manual_input.toPlainText()
        result = execute_query(query,"select")
        self.ui.select_manual_result.setText(result)

    def insert_query_executor(self):
        query = self.ui.insert_manual_input.toPlainText()
        result = execute_query(query,"insert")
        self.ui.insert_manual_result.setText(result)

    def delete_query_executor(self):
        query = self.ui.delete_manual_input.toPlainText()
        result = execute_query(query,"delete")
        self.ui.delete_manual_result.setText(result)
    
    def update_query_executor(self):
        query = self.ui.update_manual_input.toPlainText()
        result = execute_query(query,"update")
        self.ui.update_manual_result.setText(result)

    def schema_query_executor(self):
        query = self.ui.schema_manual_input.toPlainText()
        result = execute_query(query,"schema")
        self.ui.schema_manual_result.setText(result)

    
    def select_ai_query_executor(self):
        query = self.ui.select_ai_input.toPlainText()
        result = chat((query),"select")
        self.ui.select_ai_result.setText(result)
    
    def insert_ai_query_executor(self):
        query = self.ui.insert_ai_input.toPlainText()
        result = chat((query),"insert")
        self.ui.insert_ai_result.setText(result)
    
    def delete_ai_query_executor(self):
        query = self.ui.delete_ai_input.toPlainText()
        result = chat((query),"delete")
        self.ui.delete_ai_result.setText(result)

    def update_ai_query_executor(self):
        query = self.ui.update_ai_input.toPlainText()
        result = chat((query),"update")
        self.ui.update_ai_result.setText(result)
    
    def main_ai_query_executor(self):
        query = self.ui.main_ai_input.toPlainText()
        result = chat_ai(query)
        self.ui.main_ai_result.setText(result.text)

    def schema_ai_query_executor(self):
        query = self.ui.schema_ai_input.toPlainText()
        result = chat(query,"schema")
        self.ui.schema_ai_result_2.setText(result)

if __name__ == "__main__":
    app = QApplication(sys.argv)
    
    with open("style.qss","r") as style_file:
        style_str = style_file.read()
    app.setStyleSheet(style_str)

    window = MainWindow()
    window.show()

    sys.exit(app.exec())

# MainWindow.setWindowFlags(QtCore.Qt.FramelessWindowHint)
        # MainWindow.setAttribute(QtCore.Qt.WA_TranslucentBackground)





from google import genai
import time

# Set up the genai client with your API key
client = genai.Client(api_key="Place your Own Key here.")

# Create a list to store the generated SQL queries
sql_queries = []


schema_database = '''CREATE TABLE Person (
PersonID INT PRIMARY KEY IDENTITY(1,1),
FirstName VARCHAR(100),
LastName VARCHAR(100),
DateOfBirth DATE,
Gender VARCHAR(10),
Address VARCHAR(255),
PhoneNumber VARCHAR(20),
Email VARCHAR(100),
EmergencyContact VARCHAR(100)
);

-- Step 2: Create the 'Employee' table (Inherits from Person)
CREATE TABLE Employee (
EmployeeID INT PRIMARY KEY,
JobTitle VARCHAR(100),
Department VARCHAR(100),
Salary DECIMAL(10, 2),
DateOfHire DATE,
EmploymentType VARCHAR(20),
FOREIGN KEY (EmployeeID) REFERENCES Person(PersonID)
);

-- Step 3: Create the 'Patient' table (Inherits from Person)
CREATE TABLE Patient (
PatientID INT PRIMARY KEY,
InsuranceProvider VARCHAR(100),
InsurancePolicyNumber VARCHAR(100),
AdmissionDate DATE,
DischargeDate DATE,
PrimaryCarePhysician INT,
FOREIGN KEY (PatientID) REFERENCES Person(PersonID),
FOREIGN KEY (PrimaryCarePhysician) REFERENCES Employee(EmployeeID)
);

-- Step 4: Create the 'Doctor' table (Inherits from Employee)
CREATE TABLE Doctor (
DoctorID INT PRIMARY KEY,
MedicalLicenseNumber VARCHAR(100),
Specialty VARCHAR(100),
YearsOfExperience INT,
FOREIGN KEY (DoctorID) REFERENCES Employee(EmployeeID)
);

-- Step 5: Create the 'Nurse' table (Inherits from Employee)
CREATE TABLE Nurse (
NurseID INT PRIMARY KEY,
NursingLicenseNumber VARCHAR(100),
ShiftType VARCHAR(50),
WardAssigned VARCHAR(100),
FOREIGN KEY (NurseID) REFERENCES Employee(EmployeeID)
);

-- Step 6: Create the 'Department' table
CREATE TABLE Department (
DepartmentID INT PRIMARY KEY IDENTITY(1,1),
Name VARCHAR(100),
Description VARCHAR(255),
DepartmentHead INT,
FOREIGN KEY (DepartmentHead) REFERENCES Employee(EmployeeID)
);

-- Step 7: Create the 'HospitalRoom' table
CREATE TABLE HospitalRoom (
RoomID INT PRIMARY KEY IDENTITY(1,1),
RoomNumber VARCHAR(20),
Ward VARCHAR(50),
BedCount INT,
AvailabilityStatus VARCHAR(50),
RoomType VARCHAR(50)
);

-- Step 8: Create the 'Appointment' table
CREATE TABLE Appointment (
AppointmentID INT PRIMARY KEY IDENTITY(1,1),
AppointmentDate DATETIME,
Reason VARCHAR(255),
Status VARCHAR(50),
PatientID INT,
DoctorID INT,
FOREIGN KEY (PatientID) REFERENCES Patient(PatientID),
FOREIGN KEY (DoctorID) REFERENCES Doctor(DoctorID)
);

-- Step 9: Create the 'Prescription' table
CREATE TABLE Prescription (
PrescriptionID INT PRIMARY KEY IDENTITY(1,1),
Date DATE,
Dosage VARCHAR(100),
MedicineName VARCHAR(100),
Duration VARCHAR(50),
PatientID INT,
DoctorID INT,
FOREIGN KEY (PatientID) REFERENCES Patient(PatientID),
FOREIGN KEY (DoctorID) REFERENCES Doctor(DoctorID)
);

-- Step 10: Create the 'Medication' table
CREATE TABLE Medication (
MedicationID INT PRIMARY KEY IDENTITY(1,1),
MedicationName VARCHAR(100),
DosageForm VARCHAR(50),
Manufacturer VARCHAR(100),
SideEffects TEXT
);

-- Step 11: Create the 'PatientMedications' junction table (Many-to-Many relationship)
CREATE TABLE PatientMedications (
PatientID INT,
MedicationID INT,
StartDate DATE,
EndDate DATE,
DosageInstructions TEXT,
PRIMARY KEY (PatientID, MedicationID),
FOREIGN KEY (PatientID) REFERENCES Patient(PatientID),
FOREIGN KEY (MedicationID) REFERENCES Medication(MedicationID)
);

-- Step 12: Create the 'Visit' table
CREATE TABLE Visit (
VisitID INT PRIMARY KEY IDENTITY(1,1),
VisitDate DATETIME,
Diagnosis VARCHAR(255),
Notes TEXT,
PatientID INT,
DoctorID INT,
RoomID INT,
FOREIGN KEY (PatientID) REFERENCES Patient(PatientID),
FOREIGN KEY (DoctorID) REFERENCES Doctor(DoctorID),
FOREIGN KEY (RoomID) REFERENCES HospitalRoom(RoomID)
);

-- Step 13: Create the 'Bill' table
CREATE TABLE Bill (
BillID INT PRIMARY KEY IDENTITY(1,1),
BillAmount DECIMAL(10, 2),
BillDate DATE,
PaymentStatus VARCHAR(50),
PatientID INT,
VisitID INT,
FOREIGN KEY (PatientID) REFERENCES Patient(PatientID),
FOREIGN KEY (VisitID) REFERENCES Visit(VisitID)
);

-- Step 14: Create the '[Procedure]' table (Escaping reserved keyword)
CREATE TABLE [Procedure] (
ProcedureID INT PRIMARY KEY IDENTITY(1,1),
ProcedureName VARCHAR(100),
ProcedureCode VARCHAR(50),
Description TEXT,
Cost DECIMAL(10, 2)
);

-- Step 15: Create the 'PatientProcedures' junction table (Many-to-Many relationship)
CREATE TABLE PatientProcedures (
PatientID INT,
ProcedureID INT,
ProcedureDate DATE,
Status VARCHAR(50),
PRIMARY KEY (PatientID, ProcedureID),
FOREIGN KEY (PatientID) REFERENCES Patient(PatientID),
FOREIGN KEY (ProcedureID) REFERENCES [Procedure](ProcedureID)
);

-- Step 16: Create the 'PatientRoomAssignment' junction table (Many-to-Many relationship)
CREATE TABLE PatientRoomAssignment (
PatientID INT,
RoomID INT,
AdmissionDate DATE,
DischargeDate DATE,
PRIMARY KEY (PatientID, RoomID),
FOREIGN KEY (PatientID) REFERENCES Patient(PatientID),
FOREIGN KEY (RoomID) REFERENCES HospitalRoom(RoomID)
);

-- Step 17: Create the 'PatientDoctorAssignment' junction table (Many-to-Many relationship)
CREATE TABLE PatientDoctorAssignment (
PatientID INT,
DoctorID INT,
AssignmentDate DATE,
PRIMARY KEY (PatientID, DoctorID),
FOREIGN KEY (PatientID) REFERENCES Patient(PatientID),
FOREIGN KEY (DoctorID) REFERENCES Doctor(DoctorID)
);

-- --- New Employee Management System Tables ---

-- Step 18: Create the 'EmployeeAttendance' table (Tracks employee attendance)
CREATE TABLE EmployeeAttendance (
AttendanceID INT PRIMARY KEY IDENTITY(1,1),
EmployeeID INT,
Date DATE,
InTime TIME,
OutTime TIME,
Status VARCHAR(50), -- E.g., "Present", "Absent", "Sick Leave"
FOREIGN KEY (EmployeeID) REFERENCES Employee(EmployeeID)
);

-- Step 19: Create the 'Payroll' table (Handles employee payroll details)
CREATE TABLE Payroll (
PayrollID INT PRIMARY KEY IDENTITY(1,1),
EmployeeID INT,
Month INT, -- E.g., January = 1, February = 2, etc.
Year INT,
BasicSalary DECIMAL(10, 2),
Bonus DECIMAL(10, 2),
Deductions DECIMAL(10, 2),
NetSalary DECIMAL(10, 2),
PaymentDate DATE,
FOREIGN KEY (EmployeeID) REFERENCES Employee(EmployeeID)
);

-- Step 20: Create the 'PerformanceReview' table (Handles employee performance evaluations)
CREATE TABLE PerformanceReview (
ReviewID INT PRIMARY KEY IDENTITY(1,1),
EmployeeID INT,
ReviewDate DATE,
ReviewerID INT, -- ID of the person conducting the review, can be an Employee ID
Rating INT, -- E.g., on a scale from 1 to 5
Comments TEXT,
FOREIGN KEY (EmployeeID) REFERENCES Employee(EmployeeID),
FOREIGN KEY (ReviewerID) REFERENCES Employee(EmployeeID)
);

-- Step 21: Create the 'Training' table (Stores details of employee training sessions)
CREATE TABLE Training (
TrainingID INT PRIMARY KEY IDENTITY(1,1),
TrainingName VARCHAR(100),
TrainingDescription TEXT,
TrainingDate DATE,
Duration INT, -- Duration in hours
TrainerID INT, -- Can be an Employee ID (trainer/mentor)
FOREIGN KEY (TrainerID) REFERENCES Employee(EmployeeID)
);

-- Step 22: Create the 'EmployeeTraining' junction table (Links employees to training sessions)
CREATE TABLE EmployeeTraining (
EmployeeID INT,
TrainingID INT,
CompletionDate DATE,
PRIMARY KEY (EmployeeID, TrainingID),
FOREIGN KEY (EmployeeID) REFERENCES Employee(EmployeeID),
FOREIGN KEY (TrainingID) REFERENCES Training(TrainingID)
);'''

def chat_for_db(query):
    format_for_result = '''
Prompt:

You are required to analyze the given SQL query and determine which section it belongs to based on the rules below. Your answer must follow the format provided and strictly match one of the sections listed.

Format:
Section: [Exact section name]
Reason: [Brief explanation of why the query belongs to this section]

Rules:

For SELECT, EXPLAIN, SET SHOWPLAN_ALL queries: Go to Data Retrieval query section.

For DELETE queries: Go to Data Deletion query section.

For UPDATE and MERGE queries: Go to Data Modification query section.

For INSERT queries: Go to Data Insertion query section.

For CREATE, ALTER, and DROP queries: Go to Schema Modification section.

Please follow the format and rules strictly when giving your answer.'''

    response = client.models.generate_content(
        model = "gemini-2.0-flash",
        contents= query + format_for_result
    )

    simple_ai = response.text.strip()
    return str(simple_ai)





def simple_chat(ai_response,query_type):
    main_command = f'''check the above answer if it contains other type of queries than {query_type} 
    then guide the user according to given parameters for the sql sections like 
    the quesries starting with select and with and EXPLAIN and SET SHOWPLAN_ALL are done in Data Retrieval query section.
    the quesries starting with delete are done in Data Deletion query section.
    the quesries starting with update and merge are done in Data modification query section.
    the queries starting with insert are done in Data insertion query section.
    the queries starting with create, alter, drop are done in Schema Modification.
    the answer must be extremely concise , it must be atleast 3 to 4 lines with section name bolded.
    Your main task is to convey them the msg about where you have to go to get your required output.'''


    response = client.models.generate_content(
        model = "gemini-2.0-flash",
        contents= ai_response + main_command
    )

    simple_ai = response.text.strip()
    return str(simple_ai)

references = '''For SELECT, EXPLAIN, SET SHOWPLAN_ALL queries: Go to Data Retrieval query section.

For DELETE queries: Go to Data Deletion query section.

For UPDATE and MERGE queries: Go to Data Modification query section.

For INSERT queries: Go to Data Insertion query section.

For CREATE, ALTER, and DROP queries: Go to Schema Modification section.'''

def chat(user_input,prompt):
    # Ask the user for a question/input
    command_for_sql = " And lastly the answer must be just in the format of sql queries nothing else."
    given_command = schema_database + user_input + command_for_sql


    # Generate content based on user input
    try:
        response = client.models.generate_content(
            model="gemini-2.0-flash",
            contents=given_command
        )
        
        # Check if response has the 'text' attribute (assuming this is where the result is stored)
        if hasattr(response, 'text'):
            ai_response = response.text.strip()

            if prompt.lower() == "select":
                if "SELECT" in ai_response or "WITH" in ai_response or "EXPLAIN" in ai_response or "SET SHOWPLAN_ALL" in ai_response:
                    return str(ai_response)
                else:
                    return str(references)
                
            elif prompt.lower() == "delete":
                if "DELETE" in ai_response or "TRUNCATE" in ai_response or "DROP" in ai_response:
                    return str(ai_response)
                else:
                    return str(references)
                
            elif prompt.lower() == "update":
                if "UPDATE" in ai_response or "MERGE" in ai_response:
                    return str(ai_response)
                else:
                    return str(references)
            elif prompt.lower() == "insert":
                if "INSERT" in ai_response:
                    return str(ai_response)
                else:
                    return str(references)
            elif prompt.lower() == "schema":
                if "CREATE" in ai_response or "ALTER" in ai_response or "DROP" in ai_response:
                    return str(ai_response)
                else:
                    return str(references)



        else:
            return f"Unexpected response format: {response}"
    
    except Exception as e:
        print(f"Error: {e}")
        if "503" in str(e):
            time.sleep(5)
            return "Service unavailable (503). Retrying in 5 seconds..."


def chat_ai(prompt):
    try:
        response = client.models.generate_content(
            model="gemini-2.0-flash",
            contents=prompt
        )
        
        return response
    
    except Exception as e:
        print(f"Error: {e}")
        if "503" in str(e):
            time.sleep(5)
            return "Service unavailable (503). Retrying in 5 seconds..."
        

import sys
import pyodbc
from PyQt5.QtWidgets import QApplication, QWidget, QVBoxLayout, QPushButton, QLineEdit, QTextEdit
import pandas as pd 

from api_keys.openaikeys import chat_for_db

def connect_to_db():
    try:
        connection = pyodbc.connect(
            'DRIVER={ODBC Driver 17 for SQL Server};'
            'SERVER=J-D-MUGHAL;'
            'DATABASE=Hospital_Management_System;'
            'Trusted_Connection=yes;'
        )
        return connection
    except pyodbc.Error as e:
        print(f"Error: {e}")
        return None



def other_than_select_query(cursor,stmt):
    rowcount = cursor.rowcount
    action = stmt.strip().split()[0].upper()
    msg = f"{rowcount} row{'s' if rowcount != 1 else ''} {action.lower()} successfully."
    if rowcount > -1:
        return msg
    elif rowcount < 0:
        return chat_for_db(stmt)

def select_query(cursor):
    if cursor.description:
        rows = cursor.fetchall()
        columns = [column[0] for column in cursor.description]
        df = pd.DataFrame.from_records(rows, columns=columns)
        formatted_table = f"<pre>{df.to_string(index=False)}</pre>"
        return formatted_table

def execute_query(query,prompt):
    connection = connect_to_db()
    if not connection:
        error_msg = "<pre>Failed to connect to the database.</pre>"
        return error_msg

    cursor = connection.cursor()
    results = []

    try:
        # Split query into individual statements (basic version)
        statements = [stmt.strip() for stmt in query.strip().split(';') if stmt.strip()]
        for stmt in statements:
            cursor.execute(stmt)
            if prompt.lower() == "select":
                results.append(select_query(cursor))
            elif prompt.lower() == "delete":
                results.append(other_than_select_query(cursor,stmt))
            elif prompt.lower() == "update":
                results.append(other_than_select_query(cursor,stmt))
            elif prompt.lower() == "insert":
                results.append(other_than_select_query(cursor,stmt))
            elif prompt.lower() == "schema":
                results.append(other_than_select_query(cursor,stmt))
            # if cursor.description:
            #     rows = cursor.fetchall()
            #     columns = [column[0] for column in cursor.description]
            #     df = pd.DataFrame.from_records(rows, columns=columns)
            #     formatted_table = f"<pre>{df.to_string(index=False)}</pre>"
            #     results.append(select_query(connection, stmt, ))
            # else:
            #     connection.commit()
            #     rowcount = cursor.rowcount
            #     action = stmt.strip().split()[0].upper()
            #     msg = f"{rowcount} row{'s' if rowcount != 1 else ''} {action.lower()}ed successfully."
            #     results.append(msg)

        return "\n".join(results)

    except pyodbc.Error as e:
        error_msg = f"<pre>Error executing query: {e}</pre>"
        return error_msg

    finally:
        cursor.close()
        connection.close()

class DatabaseApp(QWidget):
    def __init__(self):
        super().__init__()

        self.setWindowTitle("SQL Query Executor")
        self.setGeometry(100, 100, 600, 400)

        # Layout
        self.layout = QVBoxLayout()

        # Create Widgets
        self.query_input = QLineEdit(self)
        self.query_input.setPlaceholderText("Enter SQL query here")
        
        self.execute_button = QPushButton("Execute Query", self)
        self.result_display = QTextEdit(self)
        self.result_display.setPlaceholderText("Results will appear here")
        # self.result_display.setLineWrapMode(QTextEdit.WidgetWidth)

        self.layout.addWidget(self.query_input)
        self.layout.addWidget(self.execute_button)
        self.layout.addWidget(self.result_display)

        self.setLayout(self.layout)

        self.execute_button.clicked.connect(self.execute_sql)

    def execute_sql(self):
        query = self.query_input.text()
        result = execute_query(query)
        self.result_display.setText(result)

if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = DatabaseApp()
    window.show()
    sys.exit(app.exec_())


# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'sidebar.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1250, 750)
        MainWindow.setWindowFlags(QtCore.Qt.FramelessWindowHint)
        MainWindow.setAttribute(QtCore.Qt.WA_TranslucentBackground)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setObjectName("widget")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.widget_2 = QtWidgets.QWidget(self.widget)
        self.widget_2.setObjectName("widget_2")
        self.gridLayout_18 = QtWidgets.QGridLayout(self.widget_2)
        self.gridLayout_18.setObjectName("gridLayout_18")
        self.normal_btn = QtWidgets.QPushButton(self.widget_2)
        self.normal_btn.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/newPrefix/icons8-maximize-button-96.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.normal_btn.setIcon(icon)
        self.normal_btn.setIconSize(QtCore.QSize(20, 20))
        self.normal_btn.setCheckable(True)
        self.normal_btn.setAutoExclusive(True)
        self.normal_btn.setObjectName("normal_btn")
        self.gridLayout_18.addWidget(self.normal_btn, 0, 4, 1, 1)
        self.max_btn = QtWidgets.QPushButton(self.widget_2)
        self.max_btn.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/newPrefix/maximize (1).png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon1.addPixmap(QtGui.QPixmap("../../Downloads/maximize (1).png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.max_btn.setIcon(icon1)
        self.max_btn.setIconSize(QtCore.QSize(20, 20))
        self.max_btn.setCheckable(True)
        self.max_btn.setAutoExclusive(True)
        self.max_btn.setObjectName("max_btn")
        self.gridLayout_18.addWidget(self.max_btn, 0, 5, 1, 1)
        self.change_btn = QtWidgets.QPushButton(self.widget_2)
        self.change_btn.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("icons/menu-4-512.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.change_btn.setIcon(icon2)
        self.change_btn.setIconSize(QtCore.QSize(20, 20))
        self.change_btn.setCheckable(True)
        self.change_btn.setObjectName("change_btn")
        self.gridLayout_18.addWidget(self.change_btn, 0, 0, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(200, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_18.addItem(spacerItem, 0, 1, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_18.addItem(spacerItem1, 0, 3, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.widget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("color: rgba(86, 101, 115, 0.5);")
        self.label_5.setObjectName("label_5")
        self.gridLayout_18.addWidget(self.label_5, 0, 2, 1, 1)
        self.verticalLayout_3.addWidget(self.widget_2)
        self.stackedWidget = QtWidgets.QStackedWidget(self.widget)
        self.stackedWidget.setObjectName("stackedWidget")
        self.Api_key_page = QtWidgets.QWidget()
        self.Api_key_page.setObjectName("Api_key_page")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.Api_key_page)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout()
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.label_4 = QtWidgets.QLabel(self.Api_key_page)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.verticalLayout_6.addWidget(self.label_4)
        self.main_ai_result = QtWidgets.QTextEdit(self.Api_key_page)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.main_ai_result.setFont(font)
        self.main_ai_result.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.main_ai_result.setReadOnly(True)
        self.main_ai_result.setObjectName("main_ai_result")
        self.verticalLayout_6.addWidget(self.main_ai_result)
        self.verticalLayout_11.addLayout(self.verticalLayout_6)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.main_ai_input = QtWidgets.QTextEdit(self.Api_key_page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.main_ai_input.sizePolicy().hasHeightForWidth())
        self.main_ai_input.setSizePolicy(sizePolicy)
        self.main_ai_input.setMinimumSize(QtCore.QSize(0, 30))
        self.main_ai_input.setMaximumSize(QtCore.QSize(16777215, 100))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.main_ai_input.setFont(font)
        self.main_ai_input.setObjectName("main_ai_input")
        self.horizontalLayout_3.addWidget(self.main_ai_input)
        self.main_ai_input_btn = QtWidgets.QPushButton(self.Api_key_page)
        self.main_ai_input_btn.setStyleSheet("QPushButton {\n"
"    background-color: #fff;     /* Button background */\n"
"    border-radius: 25px;           /* Half of width/height for perfect circle */\n"
"    min-width: 50px;\n"
"    min-height: 50px;\n"
"    color: white;                  /* Text color */\n"
"    font-weight: bold;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color:     #A9A9A9;     /* Hover effect */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color:#696969;     /* Pressed effect */\n"
"}\n"
"")
        self.main_ai_input_btn.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/newPrefix/icons/arrow-up.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.main_ai_input_btn.setIcon(icon3)
        self.main_ai_input_btn.setIconSize(QtCore.QSize(20, 20))
        self.main_ai_input_btn.setObjectName("main_ai_input_btn")
        self.horizontalLayout_3.addWidget(self.main_ai_input_btn)
        self.verticalLayout_11.addLayout(self.horizontalLayout_3)
        self.stackedWidget.addWidget(self.Api_key_page)
        self.select_query_page = QtWidgets.QWidget()
        self.select_query_page.setObjectName("select_query_page")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.select_query_page)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.stackedWidget_2 = QtWidgets.QStackedWidget(self.select_query_page)
        self.stackedWidget_2.setObjectName("stackedWidget_2")
        self.page_3 = QtWidgets.QWidget()
        self.page_3.setObjectName("page_3")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.page_3)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout()
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.select_ai_label = QtWidgets.QLabel(self.page_3)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.select_ai_label.setFont(font)
        self.select_ai_label.setAlignment(QtCore.Qt.AlignCenter)
        self.select_ai_label.setObjectName("select_ai_label")
        self.verticalLayout_7.addWidget(self.select_ai_label)
        self.select_ai_result = QtWidgets.QTextEdit(self.page_3)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.select_ai_result.setFont(font)
        self.select_ai_result.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.select_ai_result.setReadOnly(True)
        self.select_ai_result.setObjectName("select_ai_result")
        self.verticalLayout_7.addWidget(self.select_ai_result)
        self.gridLayout_5.addLayout(self.verticalLayout_7, 0, 0, 1, 1)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.select_ai_input = QtWidgets.QTextEdit(self.page_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.select_ai_input.sizePolicy().hasHeightForWidth())
        self.select_ai_input.setSizePolicy(sizePolicy)
        self.select_ai_input.setMinimumSize(QtCore.QSize(0, 30))
        self.select_ai_input.setMaximumSize(QtCore.QSize(16777215, 100))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.select_ai_input.setFont(font)
        self.select_ai_input.setObjectName("select_ai_input")
        self.horizontalLayout_7.addWidget(self.select_ai_input)
        self.select_ai_btn = QtWidgets.QPushButton(self.page_3)
        self.select_ai_btn.setStyleSheet("QPushButton {\n"
"    background-color: #fff;     /* Button background */\n"
"    border-radius: 25px;           /* Half of width/height for perfect circle */\n"
"    min-width: 50px;\n"
"    min-height: 50px;\n"
"    color: white;                  /* Text color */\n"
"    font-weight: bold;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color:     #A9A9A9;     /* Hover effect */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color:#696969;     /* Pressed effect */\n"
"}\n"
"")
        self.select_ai_btn.setText("")
        self.select_ai_btn.setIcon(icon3)
        self.select_ai_btn.setIconSize(QtCore.QSize(20, 20))
        self.select_ai_btn.setObjectName("select_ai_btn")
        self.horizontalLayout_7.addWidget(self.select_ai_btn)
        self.gridLayout_5.addLayout(self.horizontalLayout_7, 1, 0, 1, 1)
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.select_manual_label = QtWidgets.QLabel(self.page_3)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(True)
        font.setUnderline(True)
        font.setWeight(50)
        font.setStrikeOut(False)
        font.setKerning(False)
        self.select_manual_label.setFont(font)
        self.select_manual_label.setStyleSheet("back-ground color: #fff")
        self.select_manual_label.setObjectName("select_manual_label")
        self.horizontalLayout_8.addWidget(self.select_manual_label)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_8.addItem(spacerItem2)
        self.select_proceed_btn = QtWidgets.QPushButton(self.page_3)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.select_proceed_btn.setFont(font)
        self.select_proceed_btn.setObjectName("select_proceed_btn")
        self.horizontalLayout_8.addWidget(self.select_proceed_btn)
        self.gridLayout_5.addLayout(self.horizontalLayout_8, 2, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.page_3)
        self.page_4 = QtWidgets.QWidget()
        self.page_4.setObjectName("page_4")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.page_4)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.label_10 = QtWidgets.QLabel(self.page_4)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_10.setFont(font)
        self.label_10.setObjectName("label_10")
        self.gridLayout_6.addWidget(self.label_10, 0, 0, 1, 1)
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.select_manual_input = QtWidgets.QTextEdit(self.page_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.select_manual_input.sizePolicy().hasHeightForWidth())
        self.select_manual_input.setSizePolicy(sizePolicy)
        self.select_manual_input.setMinimumSize(QtCore.QSize(0, 30))
        self.select_manual_input.setMaximumSize(QtCore.QSize(16777215, 100))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.select_manual_input.setFont(font)
        self.select_manual_input.setObjectName("select_manual_input")
        self.horizontalLayout_9.addWidget(self.select_manual_input)
        self.select_manual_btn = QtWidgets.QPushButton(self.page_4)
        self.select_manual_btn.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.select_manual_btn.setStyleSheet("QPushButton {\n"
"    background-color: #fff;     /* Button background */\n"
"    border-radius: 25px;           /* Half of width/height for perfect circle */\n"
"    min-width: 50px;\n"
"    min-height: 50px;\n"
"    color: white;                  /* Text color */\n"
"    font-weight: bold;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color:     #A9A9A9;     /* Hover effect */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color:#696969;     /* Pressed effect */\n"
"}\n"
"")
        self.select_manual_btn.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/newPrefix/icons/image.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.select_manual_btn.setIcon(icon4)
        self.select_manual_btn.setIconSize(QtCore.QSize(20, 20))
        self.select_manual_btn.setObjectName("select_manual_btn")
        self.horizontalLayout_9.addWidget(self.select_manual_btn)
        self.gridLayout_6.addLayout(self.horizontalLayout_9, 1, 0, 1, 1)
        self.select_manual_result = QtWidgets.QTextEdit(self.page_4)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.select_manual_result.setFont(font)
        self.select_manual_result.setObjectName("select_manual_result")
        self.gridLayout_6.addWidget(self.select_manual_result, 2, 0, 1, 1)
        self.stackedWidget_2.addWidget(self.page_4)
        self.gridLayout_4.addWidget(self.stackedWidget_2, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.select_query_page)
        self.insert_query_page = QtWidgets.QWidget()
        self.insert_query_page.setObjectName("insert_query_page")
        self.gridLayout_13 = QtWidgets.QGridLayout(self.insert_query_page)
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.stackedWidget_3 = QtWidgets.QStackedWidget(self.insert_query_page)
        self.stackedWidget_3.setObjectName("stackedWidget_3")
        self.page_7 = QtWidgets.QWidget()
        self.page_7.setObjectName("page_7")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.page_7)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout()
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.label_11 = QtWidgets.QLabel(self.page_7)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.label_11.setFont(font)
        self.label_11.setAlignment(QtCore.Qt.AlignCenter)
        self.label_11.setObjectName("label_11")
        self.verticalLayout_8.addWidget(self.label_11)
        self.insert_ai_result = QtWidgets.QTextEdit(self.page_7)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.insert_ai_result.setFont(font)
        self.insert_ai_result.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.insert_ai_result.setReadOnly(True)
        self.insert_ai_result.setObjectName("insert_ai_result")
        self.verticalLayout_8.addWidget(self.insert_ai_result)
        self.gridLayout_7.addLayout(self.verticalLayout_8, 0, 0, 1, 1)
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.insert_ai_input = QtWidgets.QTextEdit(self.page_7)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.insert_ai_input.sizePolicy().hasHeightForWidth())
        self.insert_ai_input.setSizePolicy(sizePolicy)
        self.insert_ai_input.setMinimumSize(QtCore.QSize(0, 30))
        self.insert_ai_input.setMaximumSize(QtCore.QSize(16777215, 100))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.insert_ai_input.setFont(font)
        self.insert_ai_input.setObjectName("insert_ai_input")
        self.horizontalLayout_10.addWidget(self.insert_ai_input)
        self.insert_ai_btn = QtWidgets.QPushButton(self.page_7)
        self.insert_ai_btn.setStyleSheet("QPushButton {\n"
"    background-color: #fff;     /* Button background */\n"
"    border-radius: 25px;           /* Half of width/height for perfect circle */\n"
"    min-width: 50px;\n"
"    min-height: 50px;\n"
"    color: white;                  /* Text color */\n"
"    font-weight: bold;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color:     #A9A9A9;     /* Hover effect */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color:#696969;     /* Pressed effect */\n"
"}\n"
"")
        self.insert_ai_btn.setText("")
        self.insert_ai_btn.setIcon(icon3)
        self.insert_ai_btn.setIconSize(QtCore.QSize(20, 20))
        self.insert_ai_btn.setObjectName("insert_ai_btn")
        self.horizontalLayout_10.addWidget(self.insert_ai_btn)
        self.gridLayout_7.addLayout(self.horizontalLayout_10, 1, 0, 1, 1)
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.label_12 = QtWidgets.QLabel(self.page_7)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(True)
        font.setUnderline(True)
        font.setWeight(50)
        font.setStrikeOut(False)
        font.setKerning(False)
        self.label_12.setFont(font)
        self.label_12.setStyleSheet("back-ground color: #fff")
        self.label_12.setObjectName("label_12")
        self.horizontalLayout_11.addWidget(self.label_12)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_11.addItem(spacerItem3)
        self.insert_proceed_btn = QtWidgets.QPushButton(self.page_7)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.insert_proceed_btn.setFont(font)
        self.insert_proceed_btn.setObjectName("insert_proceed_btn")
        self.horizontalLayout_11.addWidget(self.insert_proceed_btn)
        self.gridLayout_7.addLayout(self.horizontalLayout_11, 2, 0, 1, 1)
        self.stackedWidget_3.addWidget(self.page_7)
        self.page_8 = QtWidgets.QWidget()
        self.page_8.setObjectName("page_8")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.page_8)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.label_13 = QtWidgets.QLabel(self.page_8)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_13.setFont(font)
        self.label_13.setObjectName("label_13")
        self.gridLayout_8.addWidget(self.label_13, 0, 0, 1, 1)
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.insert_manual_input = QtWidgets.QTextEdit(self.page_8)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.insert_manual_input.sizePolicy().hasHeightForWidth())
        self.insert_manual_input.setSizePolicy(sizePolicy)
        self.insert_manual_input.setMinimumSize(QtCore.QSize(0, 30))
        self.insert_manual_input.setMaximumSize(QtCore.QSize(16777215, 100))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.insert_manual_input.setFont(font)
        self.insert_manual_input.setObjectName("insert_manual_input")
        self.horizontalLayout_12.addWidget(self.insert_manual_input)
        self.insert_manual_btn = QtWidgets.QPushButton(self.page_8)
        self.insert_manual_btn.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.insert_manual_btn.setStyleSheet("QPushButton {\n"
"    background-color: #fff;     /* Button background */\n"
"    border-radius: 25px;           /* Half of width/height for perfect circle */\n"
"    min-width: 50px;\n"
"    min-height: 50px;\n"
"    color: white;                  /* Text color */\n"
"    font-weight: bold;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color:     #A9A9A9;     /* Hover effect */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color:#696969;     /* Pressed effect */\n"
"}\n"
"")
        self.insert_manual_btn.setText("")
        self.insert_manual_btn.setIcon(icon4)
        self.insert_manual_btn.setIconSize(QtCore.QSize(20, 20))
        self.insert_manual_btn.setObjectName("insert_manual_btn")
        self.horizontalLayout_12.addWidget(self.insert_manual_btn)
        self.gridLayout_8.addLayout(self.horizontalLayout_12, 1, 0, 1, 1)
        self.insert_manual_result = QtWidgets.QTextEdit(self.page_8)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.insert_manual_result.setFont(font)
        self.insert_manual_result.setObjectName("insert_manual_result")
        self.gridLayout_8.addWidget(self.insert_manual_result, 2, 0, 1, 1)
        self.stackedWidget_3.addWidget(self.page_8)
        self.gridLayout_13.addWidget(self.stackedWidget_3, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.insert_query_page)
        self.delete_query_page = QtWidgets.QWidget()
        self.delete_query_page.setObjectName("delete_query_page")
        self.gridLayout_14 = QtWidgets.QGridLayout(self.delete_query_page)
        self.gridLayout_14.setObjectName("gridLayout_14")
        self.stackedWidget_4 = QtWidgets.QStackedWidget(self.delete_query_page)
        self.stackedWidget_4.setObjectName("stackedWidget_4")
        self.page_9 = QtWidgets.QWidget()
        self.page_9.setObjectName("page_9")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.page_9)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.horizontalLayout_13 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_13.setObjectName("horizontalLayout_13")
        self.delete_ai_input = QtWidgets.QTextEdit(self.page_9)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.delete_ai_input.sizePolicy().hasHeightForWidth())
        self.delete_ai_input.setSizePolicy(sizePolicy)
        self.delete_ai_input.setMinimumSize(QtCore.QSize(0, 30))
        self.delete_ai_input.setMaximumSize(QtCore.QSize(16777215, 100))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.delete_ai_input.setFont(font)
        self.delete_ai_input.setObjectName("delete_ai_input")
        self.horizontalLayout_13.addWidget(self.delete_ai_input)
        self.delete_ai_btn = QtWidgets.QPushButton(self.page_9)
        self.delete_ai_btn.setStyleSheet("QPushButton {\n"
"    background-color: #fff;     /* Button background */\n"
"    border-radius: 25px;           /* Half of width/height for perfect circle */\n"
"    min-width: 50px;\n"
"    min-height: 50px;\n"
"    color: white;                  /* Text color */\n"
"    font-weight: bold;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color:     #A9A9A9;     /* Hover effect */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color:#696969;     /* Pressed effect */\n"
"}\n"
"")
        self.delete_ai_btn.setText("")
        self.delete_ai_btn.setIcon(icon3)
        self.delete_ai_btn.setIconSize(QtCore.QSize(20, 20))
        self.delete_ai_btn.setObjectName("delete_ai_btn")
        self.horizontalLayout_13.addWidget(self.delete_ai_btn)
        self.gridLayout_9.addLayout(self.horizontalLayout_13, 1, 0, 1, 1)
        self.horizontalLayout_14 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_14.setObjectName("horizontalLayout_14")
        self.label_15 = QtWidgets.QLabel(self.page_9)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(True)
        font.setUnderline(True)
        font.setWeight(50)
        font.setStrikeOut(False)
        font.setKerning(False)
        self.label_15.setFont(font)
        self.label_15.setStyleSheet("back-ground color: #fff")
        self.label_15.setObjectName("label_15")
        self.horizontalLayout_14.addWidget(self.label_15)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_14.addItem(spacerItem4)
        self.delete_proceed_btn = QtWidgets.QPushButton(self.page_9)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.delete_proceed_btn.setFont(font)
        self.delete_proceed_btn.setObjectName("delete_proceed_btn")
        self.horizontalLayout_14.addWidget(self.delete_proceed_btn)
        self.gridLayout_9.addLayout(self.horizontalLayout_14, 2, 0, 1, 1)
        self.verticalLayout_9 = QtWidgets.QVBoxLayout()
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.label_14 = QtWidgets.QLabel(self.page_9)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.label_14.setFont(font)
        self.label_14.setAlignment(QtCore.Qt.AlignCenter)
        self.label_14.setObjectName("label_14")
        self.verticalLayout_9.addWidget(self.label_14)
        self.delete_ai_result = QtWidgets.QTextEdit(self.page_9)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.delete_ai_result.setFont(font)
        self.delete_ai_result.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.delete_ai_result.setReadOnly(True)
        self.delete_ai_result.setObjectName("delete_ai_result")
        self.verticalLayout_9.addWidget(self.delete_ai_result)
        self.gridLayout_9.addLayout(self.verticalLayout_9, 0, 0, 1, 1)
        self.stackedWidget_4.addWidget(self.page_9)
        self.page_10 = QtWidgets.QWidget()
        self.page_10.setObjectName("page_10")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.page_10)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.label_16 = QtWidgets.QLabel(self.page_10)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_16.setFont(font)
        self.label_16.setObjectName("label_16")
        self.gridLayout_10.addWidget(self.label_16, 0, 0, 1, 1)
        self.horizontalLayout_15 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_15.setObjectName("horizontalLayout_15")
        self.delete_manual_input = QtWidgets.QTextEdit(self.page_10)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.delete_manual_input.sizePolicy().hasHeightForWidth())
        self.delete_manual_input.setSizePolicy(sizePolicy)
        self.delete_manual_input.setMinimumSize(QtCore.QSize(0, 30))
        self.delete_manual_input.setMaximumSize(QtCore.QSize(16777215, 100))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.delete_manual_input.setFont(font)
        self.delete_manual_input.setObjectName("delete_manual_input")
        self.horizontalLayout_15.addWidget(self.delete_manual_input)
        self.delete_manual_btn = QtWidgets.QPushButton(self.page_10)
        self.delete_manual_btn.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.delete_manual_btn.setStyleSheet("QPushButton {\n"
"    background-color: #fff;     /* Button background */\n"
"    border-radius: 25px;           /* Half of width/height for perfect circle */\n"
"    min-width: 50px;\n"
"    min-height: 50px;\n"
"    color: white;                  /* Text color */\n"
"    font-weight: bold;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color:     #A9A9A9;     /* Hover effect */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color:#696969;     /* Pressed effect */\n"
"}\n"
"")
        self.delete_manual_btn.setText("")
        self.delete_manual_btn.setIcon(icon4)
        self.delete_manual_btn.setIconSize(QtCore.QSize(20, 20))
        self.delete_manual_btn.setObjectName("delete_manual_btn")
        self.horizontalLayout_15.addWidget(self.delete_manual_btn)
        self.gridLayout_10.addLayout(self.horizontalLayout_15, 1, 0, 1, 1)
        self.delete_manual_result = QtWidgets.QTextEdit(self.page_10)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.delete_manual_result.setFont(font)
        self.delete_manual_result.setObjectName("delete_manual_result")
        self.gridLayout_10.addWidget(self.delete_manual_result, 2, 0, 1, 1)
        self.stackedWidget_4.addWidget(self.page_10)
        self.gridLayout_14.addWidget(self.stackedWidget_4, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.delete_query_page)
        self.update_query_page = QtWidgets.QWidget()
        self.update_query_page.setObjectName("update_query_page")
        self.gridLayout_15 = QtWidgets.QGridLayout(self.update_query_page)
        self.gridLayout_15.setObjectName("gridLayout_15")
        self.stackedWidget_5 = QtWidgets.QStackedWidget(self.update_query_page)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.stackedWidget_5.setFont(font)
        self.stackedWidget_5.setObjectName("stackedWidget_5")
        self.page_11 = QtWidgets.QWidget()
        self.page_11.setObjectName("page_11")
        self.gridLayout_11 = QtWidgets.QGridLayout(self.page_11)
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout()
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.label_17 = QtWidgets.QLabel(self.page_11)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.label_17.setFont(font)
        self.label_17.setAlignment(QtCore.Qt.AlignCenter)
        self.label_17.setObjectName("label_17")
        self.verticalLayout_10.addWidget(self.label_17)
        self.update_ai_result = QtWidgets.QTextEdit(self.page_11)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.update_ai_result.setFont(font)
        self.update_ai_result.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.update_ai_result.setReadOnly(True)
        self.update_ai_result.setObjectName("update_ai_result")
        self.verticalLayout_10.addWidget(self.update_ai_result)
        self.gridLayout_11.addLayout(self.verticalLayout_10, 0, 0, 1, 1)
        self.horizontalLayout_16 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_16.setObjectName("horizontalLayout_16")
        self.update_ai_input = QtWidgets.QTextEdit(self.page_11)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.update_ai_input.sizePolicy().hasHeightForWidth())
        self.update_ai_input.setSizePolicy(sizePolicy)
        self.update_ai_input.setMinimumSize(QtCore.QSize(0, 30))
        self.update_ai_input.setMaximumSize(QtCore.QSize(16777215, 100))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.update_ai_input.setFont(font)
        self.update_ai_input.setObjectName("update_ai_input")
        self.horizontalLayout_16.addWidget(self.update_ai_input)
        self.update_ai_btn = QtWidgets.QPushButton(self.page_11)
        self.update_ai_btn.setStyleSheet("QPushButton {\n"
"    background-color: #fff;     /* Button background */\n"
"    border-radius: 25px;           /* Half of width/height for perfect circle */\n"
"    min-width: 50px;\n"
"    min-height: 50px;\n"
"    color: white;                  /* Text color */\n"
"    font-weight: bold;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color:     #A9A9A9;     /* Hover effect */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color:#696969;     /* Pressed effect */\n"
"}\n"
"")
        self.update_ai_btn.setText("")
        self.update_ai_btn.setIcon(icon3)
        self.update_ai_btn.setIconSize(QtCore.QSize(20, 20))
        self.update_ai_btn.setObjectName("update_ai_btn")
        self.horizontalLayout_16.addWidget(self.update_ai_btn)
        self.gridLayout_11.addLayout(self.horizontalLayout_16, 1, 0, 1, 1)
        self.horizontalLayout_17 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_17.setObjectName("horizontalLayout_17")
        self.label_18 = QtWidgets.QLabel(self.page_11)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(True)
        font.setUnderline(True)
        font.setWeight(50)
        font.setStrikeOut(False)
        font.setKerning(False)
        self.label_18.setFont(font)
        self.label_18.setStyleSheet("back-ground color: #fff")
        self.label_18.setObjectName("label_18")
        self.horizontalLayout_17.addWidget(self.label_18)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_17.addItem(spacerItem5)
        self.update_proceed_btn = QtWidgets.QPushButton(self.page_11)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.update_proceed_btn.setFont(font)
        self.update_proceed_btn.setObjectName("update_proceed_btn")
        self.horizontalLayout_17.addWidget(self.update_proceed_btn)
        self.gridLayout_11.addLayout(self.horizontalLayout_17, 2, 0, 1, 1)
        self.stackedWidget_5.addWidget(self.page_11)
        self.page_12 = QtWidgets.QWidget()
        self.page_12.setObjectName("page_12")
        self.gridLayout_12 = QtWidgets.QGridLayout(self.page_12)
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.label_19 = QtWidgets.QLabel(self.page_12)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_19.setFont(font)
        self.label_19.setObjectName("label_19")
        self.gridLayout_12.addWidget(self.label_19, 0, 0, 1, 1)
        self.horizontalLayout_18 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_18.setObjectName("horizontalLayout_18")
        self.update_manual_input = QtWidgets.QTextEdit(self.page_12)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.update_manual_input.sizePolicy().hasHeightForWidth())
        self.update_manual_input.setSizePolicy(sizePolicy)
        self.update_manual_input.setMinimumSize(QtCore.QSize(0, 30))
        self.update_manual_input.setMaximumSize(QtCore.QSize(16777215, 100))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.update_manual_input.setFont(font)
        self.update_manual_input.setObjectName("update_manual_input")
        self.horizontalLayout_18.addWidget(self.update_manual_input)
        self.update_manual_btn = QtWidgets.QPushButton(self.page_12)
        self.update_manual_btn.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.update_manual_btn.setStyleSheet("QPushButton {\n"
"    background-color: #fff;     /* Button background */\n"
"    border-radius: 25px;           /* Half of width/height for perfect circle */\n"
"    min-width: 50px;\n"
"    min-height: 50px;\n"
"    color: white;                  /* Text color */\n"
"    font-weight: bold;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color:     #A9A9A9;     /* Hover effect */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color:#696969;     /* Pressed effect */\n"
"}\n"
"")
        self.update_manual_btn.setText("")
        self.update_manual_btn.setIcon(icon4)
        self.update_manual_btn.setIconSize(QtCore.QSize(20, 20))
        self.update_manual_btn.setObjectName("update_manual_btn")
        self.horizontalLayout_18.addWidget(self.update_manual_btn)
        self.gridLayout_12.addLayout(self.horizontalLayout_18, 1, 0, 1, 1)
        self.update_manual_result = QtWidgets.QTextEdit(self.page_12)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.update_manual_result.setFont(font)
        self.update_manual_result.setObjectName("update_manual_result")
        self.gridLayout_12.addWidget(self.update_manual_result, 2, 0, 1, 1)
        self.stackedWidget_5.addWidget(self.page_12)
        self.gridLayout_15.addWidget(self.stackedWidget_5, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.update_query_page)
        self.page = QtWidgets.QWidget()
        self.page.setObjectName("page")
        self.gridLayout_19 = QtWidgets.QGridLayout(self.page)
        self.gridLayout_19.setObjectName("gridLayout_19")
        self.stackedWidget_6 = QtWidgets.QStackedWidget(self.page)
        self.stackedWidget_6.setObjectName("stackedWidget_6")
        self.page_13 = QtWidgets.QWidget()
        self.page_13.setObjectName("page_13")
        self.gridLayout_16 = QtWidgets.QGridLayout(self.page_13)
        self.gridLayout_16.setObjectName("gridLayout_16")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout()
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.label_20 = QtWidgets.QLabel(self.page_13)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.label_20.setFont(font)
        self.label_20.setAlignment(QtCore.Qt.AlignCenter)
        self.label_20.setObjectName("label_20")
        self.verticalLayout_12.addWidget(self.label_20)
        self.schema_ai_result = QtWidgets.QTextEdit(self.page_13)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.schema_ai_result.setFont(font)
        self.schema_ai_result.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.schema_ai_result.setReadOnly(True)
        self.schema_ai_result.setObjectName("schema_ai_result")
        self.verticalLayout_12.addWidget(self.schema_ai_result)
        self.gridLayout_16.addLayout(self.verticalLayout_12, 0, 0, 1, 1)
        self.horizontalLayout_19 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_19.setObjectName("horizontalLayout_19")
        self.schema_ai_input = QtWidgets.QTextEdit(self.page_13)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.schema_ai_input.sizePolicy().hasHeightForWidth())
        self.schema_ai_input.setSizePolicy(sizePolicy)
        self.schema_ai_input.setMinimumSize(QtCore.QSize(0, 30))
        self.schema_ai_input.setMaximumSize(QtCore.QSize(16777215, 100))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.schema_ai_input.setFont(font)
        self.schema_ai_input.setObjectName("schema_ai_input")
        self.horizontalLayout_19.addWidget(self.schema_ai_input)
        self.schema_ai_btn = QtWidgets.QPushButton(self.page_13)
        self.schema_ai_btn.setStyleSheet("QPushButton {\n"
"    background-color: #fff;     /* Button background */\n"
"    border-radius: 25px;           /* Half of width/height for perfect circle */\n"
"    min-width: 50px;\n"
"    min-height: 50px;\n"
"    color: white;                  /* Text color */\n"
"    font-weight: bold;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color:     #A9A9A9;     /* Hover effect */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color:#696969;     /* Pressed effect */\n"
"}\n"
"")
        self.schema_ai_btn.setText("")
        self.schema_ai_btn.setIcon(icon3)
        self.schema_ai_btn.setIconSize(QtCore.QSize(20, 20))
        self.schema_ai_btn.setObjectName("schema_ai_btn")
        self.horizontalLayout_19.addWidget(self.schema_ai_btn)
        self.gridLayout_16.addLayout(self.horizontalLayout_19, 1, 0, 1, 1)
        self.horizontalLayout_20 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_20.setObjectName("horizontalLayout_20")
        self.label_21 = QtWidgets.QLabel(self.page_13)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(True)
        font.setUnderline(True)
        font.setWeight(50)
        font.setStrikeOut(False)
        font.setKerning(False)
        self.label_21.setFont(font)
        self.label_21.setStyleSheet("back-ground color: #fff")
        self.label_21.setObjectName("label_21")
        self.horizontalLayout_20.addWidget(self.label_21)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_20.addItem(spacerItem6)
        self.schema_proceed_btn = QtWidgets.QPushButton(self.page_13)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.schema_proceed_btn.setFont(font)
        self.schema_proceed_btn.setObjectName("schema_proceed_btn")
        self.horizontalLayout_20.addWidget(self.schema_proceed_btn)
        self.gridLayout_16.addLayout(self.horizontalLayout_20, 2, 0, 1, 1)
        self.stackedWidget_6.addWidget(self.page_13)
        self.page_14 = QtWidgets.QWidget()
        self.page_14.setObjectName("page_14")
        self.gridLayout_17 = QtWidgets.QGridLayout(self.page_14)
        self.gridLayout_17.setObjectName("gridLayout_17")
        self.label_22 = QtWidgets.QLabel(self.page_14)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_22.setFont(font)
        self.label_22.setObjectName("label_22")
        self.gridLayout_17.addWidget(self.label_22, 0, 0, 1, 1)
        self.schema_manual_result = QtWidgets.QTextEdit(self.page_14)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.schema_manual_result.setFont(font)
        self.schema_manual_result.setObjectName("schema_manual_result")
        self.gridLayout_17.addWidget(self.schema_manual_result, 2, 0, 1, 1)
        self.horizontalLayout_21 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_21.setObjectName("horizontalLayout_21")
        self.schema_manual_input = QtWidgets.QTextEdit(self.page_14)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.schema_manual_input.sizePolicy().hasHeightForWidth())
        self.schema_manual_input.setSizePolicy(sizePolicy)
        self.schema_manual_input.setMinimumSize(QtCore.QSize(0, 30))
        self.schema_manual_input.setMaximumSize(QtCore.QSize(16777215, 100))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.schema_manual_input.setFont(font)
        self.schema_manual_input.setObjectName("schema_manual_input")
        self.horizontalLayout_21.addWidget(self.schema_manual_input)
        self.schema_manual_btn = QtWidgets.QPushButton(self.page_14)
        self.schema_manual_btn.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.schema_manual_btn.setStyleSheet("QPushButton {\n"
"    background-color: #fff;     /* Button background */\n"
"    border-radius: 25px;           /* Half of width/height for perfect circle */\n"
"    min-width: 50px;\n"
"    min-height: 50px;\n"
"    color: white;                  /* Text color */\n"
"    font-weight: bold;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color:     #A9A9A9;     /* Hover effect */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color:#696969;     /* Pressed effect */\n"
"}\n"
"")
        self.schema_manual_btn.setText("")
        self.schema_manual_btn.setIcon(icon4)
        self.schema_manual_btn.setIconSize(QtCore.QSize(20, 20))
        self.schema_manual_btn.setObjectName("schema_manual_btn")
        self.horizontalLayout_21.addWidget(self.schema_manual_btn)
        self.gridLayout_17.addLayout(self.horizontalLayout_21, 1, 0, 1, 1)
        self.stackedWidget_6.addWidget(self.page_14)
        self.gridLayout_19.addWidget(self.stackedWidget_6, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page)
        self.verticalLayout_3.addWidget(self.stackedWidget)
        self.gridLayout_3.addWidget(self.widget, 0, 2, 1, 1)
        self.full_menu_widget = QtWidgets.QWidget(self.centralwidget)
        self.full_menu_widget.setObjectName("full_menu_widget")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.full_menu_widget)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setSpacing(0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label_2 = QtWidgets.QLabel(self.full_menu_widget)
        self.label_2.setMinimumSize(QtCore.QSize(60, 60))
        self.label_2.setMaximumSize(QtCore.QSize(60, 60))
        self.label_2.setText("")
        self.label_2.setPixmap(QtGui.QPixmap("icons/output-onlinepngtools.png"))
        self.label_2.setScaledContents(True)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout.addWidget(self.label_2)
        self.label_3 = QtWidgets.QLabel(self.full_menu_widget)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout.addWidget(self.label_3)
        self.verticalLayout_4.addLayout(self.horizontalLayout)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.api_btn_2 = QtWidgets.QPushButton(self.full_menu_widget)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("icons/brain-512 (1).png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon5.addPixmap(QtGui.QPixmap("icons/brain-512.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.api_btn_2.setIcon(icon5)
        self.api_btn_2.setIconSize(QtCore.QSize(20, 20))
        self.api_btn_2.setCheckable(True)
        self.api_btn_2.setAutoExclusive(True)
        self.api_btn_2.setObjectName("api_btn_2")
        self.verticalLayout.addWidget(self.api_btn_2)
        self.select_query_btn_2 = QtWidgets.QPushButton(self.full_menu_widget)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("icons/read-message-512 (1).png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon6.addPixmap(QtGui.QPixmap("icons/read-message-512.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.select_query_btn_2.setIcon(icon6)
        self.select_query_btn_2.setIconSize(QtCore.QSize(20, 20))
        self.select_query_btn_2.setCheckable(True)
        self.select_query_btn_2.setAutoExclusive(True)
        self.select_query_btn_2.setObjectName("select_query_btn_2")
        self.verticalLayout.addWidget(self.select_query_btn_2)
        self.insert_query_btn_2 = QtWidgets.QPushButton(self.full_menu_widget)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("icons/add-512 (1).png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon7.addPixmap(QtGui.QPixmap("icons/add-512.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.insert_query_btn_2.setIcon(icon7)
        self.insert_query_btn_2.setIconSize(QtCore.QSize(20, 20))
        self.insert_query_btn_2.setCheckable(True)
        self.insert_query_btn_2.setAutoExclusive(True)
        self.insert_query_btn_2.setObjectName("insert_query_btn_2")
        self.verticalLayout.addWidget(self.insert_query_btn_2)
        self.delete_query_btn_2 = QtWidgets.QPushButton(self.full_menu_widget)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("icons/delete-512.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon8.addPixmap(QtGui.QPixmap("icons/delete-512 (1).png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.delete_query_btn_2.setIcon(icon8)
        self.delete_query_btn_2.setIconSize(QtCore.QSize(20, 20))
        self.delete_query_btn_2.setCheckable(True)
        self.delete_query_btn_2.setAutoExclusive(True)
        self.delete_query_btn_2.setObjectName("delete_query_btn_2")
        self.verticalLayout.addWidget(self.delete_query_btn_2)
        self.update_query_btn_2 = QtWidgets.QPushButton(self.full_menu_widget)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("icons/available-updates-512 (1).png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon9.addPixmap(QtGui.QPixmap("icons/available-updates-512.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.update_query_btn_2.setIcon(icon9)
        self.update_query_btn_2.setIconSize(QtCore.QSize(20, 20))
        self.update_query_btn_2.setCheckable(True)
        self.update_query_btn_2.setAutoExclusive(True)
        self.update_query_btn_2.setObjectName("update_query_btn_2")
        self.verticalLayout.addWidget(self.update_query_btn_2)
        self.schema_query_btn_2 = QtWidgets.QPushButton(self.full_menu_widget)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/newPrefix/flow-chart.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon10.addPixmap(QtGui.QPixmap(":/newPrefix/image (2).png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.schema_query_btn_2.setIcon(icon10)
        self.schema_query_btn_2.setIconSize(QtCore.QSize(20, 20))
        self.schema_query_btn_2.setCheckable(True)
        self.schema_query_btn_2.setAutoExclusive(True)
        self.schema_query_btn_2.setObjectName("schema_query_btn_2")
        self.verticalLayout.addWidget(self.schema_query_btn_2)
        self.verticalLayout_4.addLayout(self.verticalLayout)
        spacerItem7 = QtWidgets.QSpacerItem(20, 503, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_4.addItem(spacerItem7)
        self.exit_btn_2 = QtWidgets.QPushButton(self.full_menu_widget)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/newPrefix/icons/power-off.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.exit_btn_2.setIcon(icon11)
        self.exit_btn_2.setIconSize(QtCore.QSize(20, 20))
        self.exit_btn_2.setCheckable(True)
        self.exit_btn_2.setAutoExclusive(True)
        self.exit_btn_2.setObjectName("exit_btn_2")
        self.verticalLayout_4.addWidget(self.exit_btn_2)
        self.gridLayout_3.addWidget(self.full_menu_widget, 0, 1, 1, 1)
        self.icons_only_widget = QtWidgets.QWidget(self.centralwidget)
        self.icons_only_widget.setObjectName("icons_only_widget")
        self.gridLayout = QtWidgets.QGridLayout(self.icons_only_widget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.label = QtWidgets.QLabel(self.icons_only_widget)
        self.label.setMinimumSize(QtCore.QSize(70, 70))
        self.label.setMaximumSize(QtCore.QSize(70, 70))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("icons/output-onlinepngtools.png"))
        self.label.setScaledContents(True)
        self.label.setWordWrap(False)
        self.label.setObjectName("label")
        self.gridLayout_2.addWidget(self.label, 0, 0, 1, 1)
        self.gridLayout.addLayout(self.gridLayout_2, 0, 0, 1, 1)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.api_btn_1 = QtWidgets.QPushButton(self.icons_only_widget)
        self.api_btn_1.setMinimumSize(QtCore.QSize(0, 0))
        self.api_btn_1.setText("")
        self.api_btn_1.setIcon(icon5)
        self.api_btn_1.setIconSize(QtCore.QSize(25, 25))
        self.api_btn_1.setCheckable(True)
        self.api_btn_1.setAutoExclusive(True)
        self.api_btn_1.setObjectName("api_btn_1")
        self.verticalLayout_2.addWidget(self.api_btn_1)
        self.select_query_btn_1 = QtWidgets.QPushButton(self.icons_only_widget)
        self.select_query_btn_1.setText("")
        self.select_query_btn_1.setIcon(icon6)
        self.select_query_btn_1.setIconSize(QtCore.QSize(25, 25))
        self.select_query_btn_1.setCheckable(True)
        self.select_query_btn_1.setAutoExclusive(True)
        self.select_query_btn_1.setObjectName("select_query_btn_1")
        self.verticalLayout_2.addWidget(self.select_query_btn_1)
        self.insert_query_btn_1 = QtWidgets.QPushButton(self.icons_only_widget)
        self.insert_query_btn_1.setText("")
        self.insert_query_btn_1.setIcon(icon7)
        self.insert_query_btn_1.setIconSize(QtCore.QSize(25, 25))
        self.insert_query_btn_1.setCheckable(True)
        self.insert_query_btn_1.setAutoExclusive(True)
        self.insert_query_btn_1.setObjectName("insert_query_btn_1")
        self.verticalLayout_2.addWidget(self.insert_query_btn_1)
        self.delete_query_btn_1 = QtWidgets.QPushButton(self.icons_only_widget)
        self.delete_query_btn_1.setText("")
        self.delete_query_btn_1.setIcon(icon8)
        self.delete_query_btn_1.setIconSize(QtCore.QSize(25, 25))
        self.delete_query_btn_1.setCheckable(True)
        self.delete_query_btn_1.setAutoExclusive(True)
        self.delete_query_btn_1.setObjectName("delete_query_btn_1")
        self.verticalLayout_2.addWidget(self.delete_query_btn_1)
        self.update_query_btn_1 = QtWidgets.QPushButton(self.icons_only_widget)
        self.update_query_btn_1.setText("")
        self.update_query_btn_1.setIcon(icon9)
        self.update_query_btn_1.setIconSize(QtCore.QSize(25, 25))
        self.update_query_btn_1.setCheckable(True)
        self.update_query_btn_1.setAutoExclusive(True)
        self.update_query_btn_1.setObjectName("update_query_btn_1")
        self.verticalLayout_2.addWidget(self.update_query_btn_1)
        self.schema_query_btn_1 = QtWidgets.QPushButton(self.icons_only_widget)
        self.schema_query_btn_1.setText("")
        self.schema_query_btn_1.setIcon(icon10)
        self.schema_query_btn_1.setIconSize(QtCore.QSize(25, 25))
        self.schema_query_btn_1.setCheckable(True)
        self.schema_query_btn_1.setAutoExclusive(True)
        self.schema_query_btn_1.setObjectName("schema_query_btn_1")
        self.verticalLayout_2.addWidget(self.schema_query_btn_1)
        self.gridLayout.addLayout(self.verticalLayout_2, 1, 0, 1, 1)
        spacerItem8 = QtWidgets.QSpacerItem(20, 445, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout.addItem(spacerItem8, 2, 0, 1, 1)
        self.exit_btn_1 = QtWidgets.QPushButton(self.icons_only_widget)
        self.exit_btn_1.setText("")
        self.exit_btn_1.setIcon(icon11)
        self.exit_btn_1.setIconSize(QtCore.QSize(25, 25))
        self.exit_btn_1.setCheckable(True)
        self.exit_btn_1.setAutoExclusive(True)
        self.exit_btn_1.setObjectName("exit_btn_1")
        self.gridLayout.addWidget(self.exit_btn_1, 3, 0, 1, 1)
        self.gridLayout_3.addWidget(self.icons_only_widget, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(5)
        self.stackedWidget_2.setCurrentIndex(1)
        self.stackedWidget_3.setCurrentIndex(0)
        self.stackedWidget_4.setCurrentIndex(0)
        self.stackedWidget_5.setCurrentIndex(0)
        self.stackedWidget_6.setCurrentIndex(0)
        self.change_btn.toggled['bool'].connect(self.icons_only_widget.setVisible) # type: ignore
        self.change_btn.toggled['bool'].connect(self.full_menu_widget.setHidden) # type: ignore
        self.api_btn_1.toggled['bool'].connect(self.api_btn_2.setChecked) # type: ignore
        self.select_query_btn_1.toggled['bool'].connect(self.select_query_btn_2.setChecked) # type: ignore
        self.insert_query_btn_1.toggled['bool'].connect(self.insert_query_btn_2.setChecked) # type: ignore
        self.delete_query_btn_1.toggled['bool'].connect(self.delete_query_btn_2.setChecked) # type: ignore
        self.update_query_btn_1.toggled['bool'].connect(self.update_query_btn_2.setChecked) # type: ignore
        self.api_btn_2.toggled['bool'].connect(self.api_btn_1.setChecked) # type: ignore
        self.select_query_btn_2.toggled['bool'].connect(self.select_query_btn_1.setChecked) # type: ignore
        self.insert_query_btn_2.toggled['bool'].connect(self.insert_query_btn_1.setChecked) # type: ignore
        self.delete_query_btn_2.toggled['bool'].connect(self.delete_query_btn_1.setChecked) # type: ignore
        self.update_query_btn_2.toggled['bool'].connect(self.update_query_btn_1.setChecked) # type: ignore
        self.exit_btn_2.clicked.connect(MainWindow.close) # type: ignore
        self.exit_btn_1.clicked.connect(MainWindow.close) # type: ignore
        self.max_btn.clicked.connect(MainWindow.showMaximized) # type: ignore
        self.normal_btn.clicked.connect(MainWindow.showNormal) # type: ignore
        self.schema_query_btn_1.toggled['bool'].connect(self.schema_query_btn_2.setChecked) # type: ignore
        self.schema_query_btn_2.toggled['bool'].connect(self.schema_query_btn_1.setChecked) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_5.setText(_translate("MainWindow", "NeuroSQL"))
        self.label_4.setText(_translate("MainWindow", "Care Companion AI Bot"))
        self.main_ai_input.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:14pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:20pt;\"><br /></p></body></html>"))
        self.select_ai_label.setText(_translate("MainWindow", "Data Retrieval Query Page"))
        self.select_ai_input.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p></body></html>"))
        self.select_manual_label.setText(_translate("MainWindow", "Note: Copy the Command from Above and paste it to the input line when Proceed button is pressed!!!"))
        self.select_proceed_btn.setText(_translate("MainWindow", "Proceed"))
        self.label_10.setText(_translate("MainWindow", "Data Retrieval Query Result Generetor"))
        self.label_11.setText(_translate("MainWindow", "Data Insertion Query Page"))
        self.insert_ai_input.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p></body></html>"))
        self.label_12.setText(_translate("MainWindow", "Note: Copy the Command from Above and paste it to the input line when Proceed button is pressed!!!"))
        self.insert_proceed_btn.setText(_translate("MainWindow", "Proceed"))
        self.label_13.setText(_translate("MainWindow", "Data Insertion Query Result Generetor"))
        self.delete_ai_input.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p></body></html>"))
        self.label_15.setText(_translate("MainWindow", "Note: Copy the Command from Above and paste it to the input line when Proceed button is pressed!!!"))
        self.delete_proceed_btn.setText(_translate("MainWindow", "Proceed"))
        self.label_14.setText(_translate("MainWindow", "Data Deletion Query Page"))
        self.label_16.setText(_translate("MainWindow", "Data Deletion Query Result Generetor"))
        self.label_17.setText(_translate("MainWindow", "Data Modification Query Page"))
        self.update_ai_input.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p></body></html>"))
        self.label_18.setText(_translate("MainWindow", "Note: Copy the Command from Above and paste it to the input line when Proceed button is pressed!!!"))
        self.update_proceed_btn.setText(_translate("MainWindow", "Proceed"))
        self.label_19.setText(_translate("MainWindow", "Data Modification Query Result Generetor"))
        self.label_20.setText(_translate("MainWindow", "Schema Modification Page"))
        self.schema_ai_input.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p></body></html>"))
        self.label_21.setText(_translate("MainWindow", "Note: Copy the Command from Above and paste it to the input line when Proceed button is pressed!!!"))
        self.schema_proceed_btn.setText(_translate("MainWindow", "Proceed"))
        self.label_22.setText(_translate("MainWindow", "Schema Modification Result Generetor"))
        self.schema_manual_result.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:14pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.schema_manual_input.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.label_3.setText(_translate("MainWindow", "HOSPITAL DATABASE"))
        self.api_btn_2.setText(_translate("MainWindow", "Care Companion"))
        self.select_query_btn_2.setText(_translate("MainWindow", "Data Retrieval Query"))
        self.insert_query_btn_2.setText(_translate("MainWindow", "Data Insertion Query"))
        self.delete_query_btn_2.setText(_translate("MainWindow", "Data Deletion Query"))
        self.update_query_btn_2.setText(_translate("MainWindow", "Data Modification Query"))
        self.schema_query_btn_2.setText(_translate("MainWindow", "Schema Modification"))
        self.exit_btn_2.setText(_translate("MainWindow", "EXIT"))
import resource_rc
